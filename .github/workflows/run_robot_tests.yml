name: Run Android Emulator

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup-emulator:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Android SDK Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip
        curl -o android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip android-sdk.zip -d $HOME/android-sdk
        mkdir -p $HOME/android-sdk/cmdline-tools/latest
        mv $HOME/android-sdk/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/ || true
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

    - name: Check KVM Support
      run: |
        if ! grep -qE "(vmx|svm)" /proc/cpuinfo; then
          echo "KVM support is required to run the emulator. Exiting..."
          exit 1
        else
          echo "KVM support detected. Proceeding..."
        fi

    - name: Accept Licenses and Install Emulator
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "emulator" "platforms;android-29" "system-images;android-29;google_apis;arm64-v8a"

    - name: Create Android Virtual Device
      run: |
        echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_device -k "system-images;android-29;google_apis;arm64-v8a" --device "pixel_4"

    - name: Start Android Emulator
      run: |
        $ANDROID_HOME/emulator/emulator -avd test_device -no-snapshot -no-window -gpu off -partition-size 512 &
        adb wait-for-device

    - name: Verify Device
      run: adb devices

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install robotframework
        pip install robotframework-appiumlibrary

    - name: Install Appium
      run: |
        npm install -g appium

    - name: Install Appium UIAutomator2 Driver
      run: |     
        npx appium driver install uiautomator2

    - name: Start Appium Server
      run: |
        appium --port 4723 &  

    - name: Run Robot Framework Tests
      run: |
        mkdir -p appium-expandtesting_UI/results        
        robot -d ./results tests
